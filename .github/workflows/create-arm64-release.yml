name: Create EL6 & EL7 arm64 release

on:
  push:
    tags: [ "v10.1p1" ]
  workflow_dispatch:

jobs:
  build_el7:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: "Compile CentOS 7 (arm64)"
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}/output:/data/el7/RPMS/aarch64 \
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:centos7

      - uses: actions/upload-artifact@v4
        with:
          name: el7-arm64
          path: ${{ github.workspace }}/output

  build_el6:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: "Compile CentOS 6 (arm64)"
        run: |
          docker run --rm --platform linux/arm64 \
            -v ${{ github.workspace }}/output:/data/el6/RPMS/aarch64 \
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:centos6

      - uses: actions/upload-artifact@v4
        with:
          name: el6-arm64
          path: ${{ github.workspace }}/output

  create_release:
    needs:
      - build_el6
      - build_el7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: el6-arm64
          path: ./output

      - uses: actions/download-artifact@v4
        with:
          name: el7-arm64
          path: ./output

      - name: Generate release notes
        run: |
          echo "> Automated release created by GitHub Actions." > ${{ github.workspace }}/RELEASE.md
          echo "## Release Tag: ${{ github.ref_name }}" >> ${{ github.workspace }}/RELEASE.md

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/output/*"
          bodyFile: ${{ github.workspace }}/RELEASE.md
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
